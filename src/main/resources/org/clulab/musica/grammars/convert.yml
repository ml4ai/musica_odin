
vars: org/clulab/musica/grammars/triggers.yml


rules:

# RE typing (previously convert-note, convert-chord, and convert-rest)
  # todo: we can either NOT CARE if it's covert or X
  # todo: OR we can pass this to an action--if they are different labels, keep it; otherwise, change the type
  # todo: e.g. ensure type conversion

  # works for both active and passive
  - name: convert-0a-syntax-that-is-in
    label: ${label}
    priority: ${rulepriority}
    example: "Change the quarter note that is in the first measure to a quarter rest"
    pattern:
      trigger = [word=/(?i)^(${change_duration_triggers})/]
      sourceEntity:EntityMusic = >/dobj|nsubjpass/
      sourceLocation:Location = >/dobj|nsubjpass/ <nsubj (>/nmod_in|nmod_at/)?
      destEntity:EntityMusic? = (>dobj <nsubj (>/nmod_in|nmod_at/)?)? >/nmod_to|nmod_into/

  - name: convert-0b-syntax
    label: ${label}
    priority: ${rulepriority}
    example: "Convert the quarter note in measure 1 into a quarter rest"
    pattern: |
      trigger = [word=/(?i)^(${convert_triggers})/]
      sourceEntity: Note = >dobj
      location: Location = >/nmod_in|nmod_at/
      destEntity: EntityMusic? = >/nmod_into|nmod_to/

  - name: convert-0c-syntax-passive
    label: ${label}
    priority: ${rulepriority}
    example: "Convert the quarter note in measure 1 into a quarter rest"
    pattern: |
      trigger = [word=/(?i)^(${convert_triggers})/]
      sourceEntity: Note = >/nsubjpass|nsubj/
      location: Location = (>/nsubjpass|nsubj/)? >/nmod_in|nmod_at/
      destEntity: EntityMusic? = >/nmod_into|nmod_to/

  - name: convert-1
    label: ${label}
    priority: ${rulepriority}
    type: token
    pattern: |
      (@location:Location [tag=/,/]?)? (?<trigger>[word=/(?i)^(${convert_triggers})/])
      @musicalEntity:EntityMusic @location:Location? (from @sourceEntity:EntityMusic)? (to|into)
      @destEntity:EntityMusic @location:Location?

  # todo: will need to be handled later by all event types
  - name: convert-2-conjunction
    label: ${label}
    priority: ${rulepriority}
    example: "convert the G in measure 1 to an augmented second and the F into a rest"
    type: token
    pattern: |
      (?<trigger>[word=/(?i)^(${convert_triggers})/]) []{2,10} and @sourceEntity:EntityMusic
      (to|into) @destEntity:EntityMusic @location:Location?

  - name: convert-note-3-passive
    label: ${label}
    priority: ${rulepriority}
    example: "the G in measure 1 should be converted into a quarter rest"
    type: token
    pattern: |
      (@location:Location [tag=/,/]?)? @sourceEntity:EntityMusic @location:Location?
      [word=/^(${modals})/]? to? [word=/^(${aux_be})/] (?<trigger>[word=/(?i)^(${convert_triggers})/])
      (to|into) @destEntity:EntityMusic @location:Location?

  - name: convert-note-4-interveningverb
    label: ${label}
    priority: ${rulepriority}
    example: "In measure 1, take the G and convert it into a quarter rest."
    type: token
    pattern: |
      (@location:Location [tag=/,/]?)? [tag=/^VB/] @sourceEntity:EntityMusic
      @location:Location? and (?<trigger>[word=/(?i)^(${convert_triggers})/]) []? (to|into)
      @destEntity:EntityMusic @location:Location?

  - name: convert-note-5-passive-interveningverb
    label: ${label}
    priority: ${rulepriority}
    example: "The G in measure 1 should be taken and converted into a quarter rest"
    type: token
    pattern: |
      (@location:Location [tag=/,/]?)? @sourceEntity:EntityMusic @location:Location?
      [word=/^(${modals})/]? to? [word=/^(${aux_be})/] [tag=/^VB/] and
      (?<trigger>[word=/(?i)^(${convert_triggers})/]) []? (to|into)
      @destEntity:EntityMusic @location:Location?
#
#  - name: convert-no-object
#    label: ${label}
#    priority: ${rulepriority}
#    example: "The three notes in the third bar changed"
#    pattern: |
