vars:
      notes: "A|A#|Ab|B|B#|Bb|C|C#|Cb|D|D#|Db|E|E#|Eb|F|F#|Fb|G|G#|Gb"
      proportions: "sixteenth|eight|quarter|half|whole"

rules:

## --------------------------------------------
              # Atomic things
## --------------------------------------------
    - name: direction
      label: Direction
      priority: 1
      type: token  # surface rule
      pattern: |
        [word=/(up|down)/]


    - name: cardinality
      label: Cardinality
      priority: 1
      type: token  # surface rule
      pattern: |
        [tag=/CD/ | entity=/ORDINAL/]

    - name: proportion
      label: Proportion
      priority: 1
      type: token  # surface rule
      pattern: |
        [word=/(?i)^(${proportions})/]

    - name: step-trigger
      label: Step
      priority: 2
      type: token  # surface rule
      pattern: |
        (@cardinality:Cardinality)? (@proportion: Proportion)? (?<trigger>[word=/^step/])

    - name: step-underspecified
      label: Step
      priority: 2
      type: token  # surface rule
      pattern: |
        (?<= /(?i)^(up|down)$/) (@cardinality:Cardinality)

    # todo: fix
    - name: pitch-1
      label: Pitch
      priority: 1
      type: token  # surface rule
      pattern: |   # replace with ${notes} var?
        [word=/^(${notes})[0-9]*s?\.?$/]
        # Note -- the \. is to handle cases that don't tokenize correctly, like "Delete the second G."  Here, the period
        # is included in the G token.

    - name: specifier-1
      label: Specifier
      priority: 2
      type: token  # surface rule
      pattern: |
        (?<quantifier>[tag=/^(DT|PDT)/]) (@cardinality:Cardinality)?


    - name: beat-1
      label: Beat
      priority: 2
      type: token  # surface rule
      pattern: |   # what does ^ indicate? ; where is cardinality def'd?
        (?<trigger>[word=/^beat/]) @cardinality:Cardinality

    - name: measure-1
      label: Measure
      priority: 2
      type: token  # surface rule
      pattern: |
        (?<trigger>[word=/^measure/]) @cardinality:Cardinality




## --------------------------------------------
              # Simple Events
## --------------------------------------------


    # no "type" so it's a syntax rule
    - name: note-1
      label: Note
      priority: 3
      pattern: |  # what is amod or compound?
        trigger = [word=/(?i)^note/]
        duration: Proportion? = >/(amod|compound)/
        pitch: Pitch? = >/(amod|compound)/
        specifier: Specifier? = >/^det/

    # no "type" so it's a syntax rule
    - name: note-2-underspecified
      label: Note
      priority: 3
      type: token
      pattern: |  # what is amod or compound?
        (@specifier:Specifier []{,2})? @pitch:Pitch



    - name: onset-1
      label: Onset
      priority: 3
      type: token
      pattern: |  # what does []? indicate?
          ((@measure:Measure []?)? @beat:Beat |
          @measure:Measure ([]? @beat:Beat)? |
          (@beat:Beat []?)? @measure:Measure |
          @beat:Beat ([]? @measure:Measure)?)



    - name: onset-2
      label: Onset
      priority: 3
      type: token
      pattern: |
        @measure:Measure []? @beat:Beat |
        @beat:Beat []? @measure:Measure



#    - name: insert-1
#      label: Insert
#      priority: 3
#      pattern: |  # what is amod or compound?
#        trigger = [word=/(?i)^note/]
#        duration: Duration? = >/(amod|compound)/
#        pitch: Pitch? = >/(amod|compound)/
#        specifier: Specifier? = >det
